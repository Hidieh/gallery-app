[{"/Users/heidihapponen/School/gallery-app/src/index.js":"1","/Users/heidihapponen/School/gallery-app/src/App.js":"2","/Users/heidihapponen/School/gallery-app/src/components/Album.js":"3","/Users/heidihapponen/School/gallery-app/src/components/Gallery.js":"4","/Users/heidihapponen/School/gallery-app/src/components/Image.js":"5"},{"size":236,"mtime":1611732706926,"results":"6","hashOfConfig":"7"},{"size":681,"mtime":1611732681539,"results":"8","hashOfConfig":"7"},{"size":2618,"mtime":1611677085606,"results":"9","hashOfConfig":"7"},{"size":1708,"mtime":1611730799805,"results":"10","hashOfConfig":"7"},{"size":1899,"mtime":1611677318270,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19qp3w8",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},"/Users/heidihapponen/School/gallery-app/src/index.js",[],"/Users/heidihapponen/School/gallery-app/src/App.js",[],"/Users/heidihapponen/School/gallery-app/src/components/Album.js",["26","27"],"import React, {useState, useEffect} from 'react'\nimport '../App.css'\nimport ReactPaginate from \"react-paginate\"\nimport {\n  BrowserRouter as Router,\n  Link, useParams\n} from \"react-router-dom\"\n\nexport default function Album () {\n  const id = useParams().id\n  const [currentPage, setCurrentPage] = useState(0);\n  const [data, setData] = useState([]);\n  const [album, setAlbum] = useState([]);\n  const PER_PAGE = 16;\n  const offset = currentPage * PER_PAGE;\n  const currentPageData = data.slice(offset, offset + PER_PAGE);\n  const pageCount = Math.ceil(data.length / PER_PAGE);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  function fetchData() {\n    fetch(`https://jsonplaceholder.typicode.com/albums/${id}/photos`)\n    .then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    })\n    .then(function (imageData) {\n      setData(imageData)\n      return fetch(`https://jsonplaceholder.typicode.com/albums/${id}`);\n    })\n    .then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    })\n    .then(function (albumData) {\n      setAlbum(albumData)\n    })\n    .catch(function (error) {\n      console.warn(error);\n    });\n  }\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n\n  return (\n    <div className=\"galleryWrapper\">\n      <Link to={'/'}>\n        <button className=\"btn\">Back to album listing</button>\n      </Link>\n      <h1>Image Album</h1>\n      <h2 style={{ marginTop: 0, textAlign: 'center' }}>Title: {album.title}</h2>\n      <p className=\"black-text\" style={{ textAlign: 'center' }}>{data.length} images in total</p>\n      <div className=\"cardWrapper\">\n        {currentPageData.map((image)=>(\n          <div key={image.id} className=\"imageCard\">\n            <div className=\"imageCardBg\" style={{ backgroundImage: `url(${image.thumbnailUrl})`}}></div>\n            <Link to={`/image/${image.id}`}><h3>{image.title}</h3></Link>\n          </div>\n        ))}\n      </div>\n      <div className=\"pagination\">\n        <ReactPaginate\n          previousLabel={\"← Previous\"}\n          nextLabel={\"Next →\"}\n          pageCount={pageCount}\n          onPageChange={handlePageClick}\n          containerClassName={\"pagination\"}\n          previousLinkClassName={\"pagination__link\"}\n          nextLinkClassName={\"pagination__link\"}\n          disabledClassName={\"pagination__link--disabled\"}\n          activeClassName={\"pagination__link--active\"}\n        />\n      </div>\n    </div>\n  );\n}",["28","29"],"/Users/heidihapponen/School/gallery-app/src/components/Gallery.js",["30"],"import React, {useState, useEffect} from 'react'\nimport '../App.css'\nimport ReactPaginate from \"react-paginate\"\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\"\n\nexport default function Gallery () {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [data, setData] = useState([]);\n  const PER_PAGE = 16;\n  const offset = currentPage * PER_PAGE;\n  const currentPageData = data.slice(offset, offset + PER_PAGE);\n  const pageCount = Math.ceil(data.length / PER_PAGE);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  function fetchData() {\n    fetch('https://jsonplaceholder.typicode.com/albums/')\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data);\n      });\n  }\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n\n  return (\n    <div className=\"galleryWrapper\">\n      <h1>All Image Albums</h1>\n      <p className=\"black-text\" style={{ textAlign: 'center' }}>{data.length} albums in total</p>\n      <div className=\"cardWrapper\">\n        {currentPageData.map((album)=>(\n          <div key={album.id} className=\"imageCard\">\n            <h3 style={{ textAlign: 'center'}}><Link to={`/album/${album.id}`}>{album.title}</Link></h3>\n          </div>\n        ))}\n      </div>\n      <ReactPaginate\n        previousLabel={\"← Previous\"}\n        nextLabel={\"Next →\"}\n        pageCount={pageCount}\n        onPageChange={handlePageClick}\n        containerClassName={\"pagination\"}\n        previousLinkClassName={\"pagination__link\"}\n        nextLinkClassName={\"pagination__link\"}\n        disabledClassName={\"pagination__link--disabled\"}\n        activeClassName={\"pagination__link--active\"}\n      />\n    </div>\n  );\n}","/Users/heidihapponen/School/gallery-app/src/components/Image.js",["31"],"import React, {useState, useEffect} from 'react'\nimport '../App.css'\nimport { Link, useParams } from \"react-router-dom\"\n\nexport default function Image ( ) {\n  const id = useParams().id\n  const [image, setImage] = useState([])\n  const [user, setUser] = useState([])\n  const [album, setAlbum] = useState([])\n\n  useEffect (() => {\n    // Call the API\n    fetch(`https://jsonplaceholder.typicode.com/photos/${id}`)\n    .then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    })\n    .then(function (imageData) {\n      setImage(imageData)\n      return fetch(`https://jsonplaceholder.typicode.com/albums/${imageData.albumId}`);\n    })\n    .then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    })\n    .then(function (albumData) {\n      setAlbum(albumData)\n      return fetch(`https://jsonplaceholder.typicode.com/users/${albumData.userId}`);\n    })\n    .then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    })\n    .then(function (userData) {\n      setUser(userData)\n      return\n    })\n    .catch(function (error) {\n      console.warn(error);\n    });\n  }, [])\n\n  return (\n    <div className=\"galleryWrapper\">\n      <Link to={`/album/${image.albumId}`}>\n        <button className=\"btn\">Back to album</button>\n      </Link>\n      <h1>Image</h1>\n      \n      <div className=\"imageWrapper\">\n        <div className=\"imageDiv\">\n          <img src={image.url} alt=\"\" />\n        </div>\n        <div className=\"imageMeta\">\n          <h2>{image.title}</h2>\n          <p>Album: <Link to={`/album/${image.albumId}`}>{album.title}</Link></p>\n          <p>Creator: {user.name}</p>\n        </div>\n      </div>\n    </div>\n  );\n}",{"ruleId":"32","severity":1,"message":"33","line":5,"column":20,"nodeType":"34","messageId":"35","endLine":5,"endColumn":26},{"ruleId":"36","severity":1,"message":"37","line":21,"column":6,"nodeType":"38","endLine":21,"endColumn":8,"suggestions":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"32","severity":1,"message":"33","line":5,"column":20,"nodeType":"34","messageId":"35","endLine":5,"endColumn":26},{"ruleId":"36","severity":1,"message":"44","line":50,"column":6,"nodeType":"38","endLine":50,"endColumn":8,"suggestions":"45"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["46"],"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["49"],{"desc":"50","fix":"51"},"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [fetchData]",{"range":"54","text":"55"},"Update the dependencies array to be: [id]",{"range":"56","text":"57"},[618,620],"[fetchData]",[1343,1345],"[id]"]